#!/bin/bash
cd ~/build
DIR=$(echo ${@%/})

if [ -d "./$DIR" ]; then
        cd $DIR
        git clean -dfx
        git pull
else
        git clone https://aur.archlinux.org/$DIR.git
        cd $DIR
fi

echo $DIR

LOCK_FILE=~/build/$DIR.lock
if [ -f "$LOCK_FILE" ]; then
        COMMIT_LOCK=$(cat $LOCK_FILE)
        git checkout $COMMIT_LOCK
fi

makepkg -s > /tmp/$DIR.build.log 2>&1
if [ $? -ne 0 ]; then
        echo "Failed to build package "$DIR
        mv /tmp/$DIR.build.log ~/logs/
fi

rm /tmp/$DIR.build.log

REQUESTED_VERSION_PATH=~/build/$DIR.version

if [ -f "$REQUESTED_VERSION_PATH" ]; then
        REQUESTED_PACKAGE_REGEX=$(cat $REQUESTED_VERSION_PATH)
        REQUESTED_PACKAGE=$(ls -t *.pkg.tar.zst | grep $REQUESTED_PACKAGE_REGEX)
        cp -u $REQUESTED_PACKAGE ../../packages/$DIR.pkg.tar.zst
        FILE_HASH=$(md5sum $REQUESTED_PACKAGE)
        FILE_PARTS=($FILE_HASH)
        echo ${FILE_PARTS[0]} > ../../packages/$DIR.version
else
        NEWEST_PKG=$(ls -t *.pkg.tar.zst | head -1)
        cp -u $NEWEST_PKG ../../packages/$DIR.pkg.tar.zst
        FILE_HASH=$(md5sum $NEWEST_PKG)
        FILE_PARTS=($FILE_HASH)
        echo ${FILE_PARTS[0]} > ../../packages/$DIR.version
fi